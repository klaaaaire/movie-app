[{"/Users/claire/Documents/GitHub/movieapp/src/index.js":"1","/Users/claire/Documents/GitHub/movieapp/src/routers/AppRouter.js":"2","/Users/claire/Documents/GitHub/movieapp/src/components/Footer.js":"3","/Users/claire/Documents/GitHub/movieapp/src/components/Header.js":"4","/Users/claire/Documents/GitHub/movieapp/src/pages/PageAbout.js":"5","/Users/claire/Documents/GitHub/movieapp/src/components/BackToTop.js":"6","/Users/claire/Documents/GitHub/movieapp/src/pages/PageHome.js":"7","/Users/claire/Documents/GitHub/movieapp/src/components/ScrollToTop.js":"8","/Users/claire/Documents/GitHub/movieapp/src/pages/PageFavorites.js":"9","/Users/claire/Documents/GitHub/movieapp/src/pages/PageSingleMovie.js":"10","/Users/claire/Documents/GitHub/movieapp/src/components/NavMain.js":"11","/Users/claire/Documents/GitHub/movieapp/src/components/NavSort.js":"12","/Users/claire/Documents/GitHub/movieapp/src/components/Movies.js":"13","/Users/claire/Documents/GitHub/movieapp/src/components/Banner.js":"14","/Users/claire/Documents/GitHub/movieapp/src/components/SingleMovie.js":"15","/Users/claire/Documents/GitHub/movieapp/src/globals/globals.js":"16","/Users/claire/Documents/GitHub/movieapp/src/components/MovieCard.js":"17","/Users/claire/Documents/GitHub/movie-app/src/index.js":"18","/Users/claire/Documents/GitHub/movie-app/src/routers/AppRouter.js":"19","/Users/claire/Documents/GitHub/movie-app/src/components/Header.js":"20","/Users/claire/Documents/GitHub/movie-app/src/components/Footer.js":"21","/Users/claire/Documents/GitHub/movie-app/src/components/BackToTop.js":"22","/Users/claire/Documents/GitHub/movie-app/src/pages/PageHome.js":"23","/Users/claire/Documents/GitHub/movie-app/src/components/ScrollToTop.js":"24","/Users/claire/Documents/GitHub/movie-app/src/pages/PageAbout.js":"25","/Users/claire/Documents/GitHub/movie-app/src/pages/PageSingleMovie.js":"26","/Users/claire/Documents/GitHub/movie-app/src/pages/PageFavorites.js":"27","/Users/claire/Documents/GitHub/movie-app/src/components/NavMain.js":"28","/Users/claire/Documents/GitHub/movie-app/src/components/Movies.js":"29","/Users/claire/Documents/GitHub/movie-app/src/components/NavSort.js":"30","/Users/claire/Documents/GitHub/movie-app/src/components/Banner.js":"31","/Users/claire/Documents/GitHub/movie-app/src/components/SingleMovie.js":"32","/Users/claire/Documents/GitHub/movie-app/src/globals/globals.js":"33","/Users/claire/Documents/GitHub/movie-app/src/components/MovieCard.js":"34"},{"size":253,"mtime":1635026149673,"results":"35","hashOfConfig":"36"},{"size":1359,"mtime":1635026149674,"results":"37","hashOfConfig":"36"},{"size":226,"mtime":1635026308844,"results":"38","hashOfConfig":"36"},{"size":402,"mtime":1635026149665,"results":"39","hashOfConfig":"36"},{"size":654,"mtime":1635026149673,"results":"40","hashOfConfig":"36"},{"size":556,"mtime":1635026149665,"results":"41","hashOfConfig":"36"},{"size":4172,"mtime":1635026149673,"results":"42","hashOfConfig":"36"},{"size":245,"mtime":1635026149666,"results":"43","hashOfConfig":"36"},{"size":1061,"mtime":1635026149673,"results":"44","hashOfConfig":"36"},{"size":1388,"mtime":1635026149673,"results":"45","hashOfConfig":"36"},{"size":1812,"mtime":1635026149665,"results":"46","hashOfConfig":"36"},{"size":660,"mtime":1635026149666,"results":"47","hashOfConfig":"36"},{"size":259,"mtime":1635026149665,"results":"48","hashOfConfig":"36"},{"size":1102,"mtime":1635026149665,"results":"49","hashOfConfig":"36"},{"size":4050,"mtime":1635026149666,"results":"50","hashOfConfig":"36"},{"size":394,"mtime":1635026149666,"results":"51","hashOfConfig":"36"},{"size":3202,"mtime":1635026149665,"results":"52","hashOfConfig":"36"},{"size":253,"mtime":1635026149673,"results":"53","hashOfConfig":"54"},{"size":1389,"mtime":1650516969064,"results":"55","hashOfConfig":"54"},{"size":402,"mtime":1635026149665,"results":"56","hashOfConfig":"54"},{"size":216,"mtime":1647538193903,"results":"57","hashOfConfig":"54"},{"size":556,"mtime":1635026149665,"results":"58","hashOfConfig":"54"},{"size":4174,"mtime":1646502592599,"results":"59","hashOfConfig":"54"},{"size":245,"mtime":1635026149666,"results":"60","hashOfConfig":"54"},{"size":654,"mtime":1635026149673,"results":"61","hashOfConfig":"54"},{"size":1388,"mtime":1646704270384,"results":"62","hashOfConfig":"54"},{"size":1061,"mtime":1635026149673,"results":"63","hashOfConfig":"54"},{"size":1812,"mtime":1650516987263,"results":"64","hashOfConfig":"54"},{"size":259,"mtime":1635026149665,"results":"65","hashOfConfig":"54"},{"size":660,"mtime":1635026149666,"results":"66","hashOfConfig":"54"},{"size":1102,"mtime":1635026149665,"results":"67","hashOfConfig":"54"},{"size":4026,"mtime":1650517038556,"results":"68","hashOfConfig":"54"},{"size":394,"mtime":1635026149666,"results":"69","hashOfConfig":"54"},{"size":4758,"mtime":1650259235112,"results":"70","hashOfConfig":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b2n82s",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"xemlcz",{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"113"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"113"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"113"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"113"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"113"},"/Users/claire/Documents/GitHub/movieapp/src/index.js",[],"/Users/claire/Documents/GitHub/movieapp/src/routers/AppRouter.js",[],"/Users/claire/Documents/GitHub/movieapp/src/components/Footer.js",[],"/Users/claire/Documents/GitHub/movieapp/src/components/Header.js",[],"/Users/claire/Documents/GitHub/movieapp/src/pages/PageAbout.js",[],"/Users/claire/Documents/GitHub/movieapp/src/components/BackToTop.js",[],"/Users/claire/Documents/GitHub/movieapp/src/pages/PageHome.js",["148"],"import { useEffect, useState } from 'react';\nimport { API_KEY, API_TOKEN } from '../globals/globals';\nimport NavSort from '../components/NavSort';\nimport Movies from '../components/Movies';\nimport Banner from '../components/Banner';\n\n\nfunction PageHome({ sort }) {\n\n    const [movieData1, setMovieData1] = useState(null);\n    const [movieData2, setMovieData2] = useState(null);\n    const [movieData3, setMovieData3] = useState(null);\n    const [movieData4, setMovieData4] = useState(null);\n    const [movieData5, setMovieData5] = useState(null);\n\n    const [page, setPage] = useState(1)\n\n    // variable for Banner\n    const [movieDataBanner, setMovieDataBanner] = useState(null);\n    const [movieBannerLength, setMovieBannerLength] = useState(null);\n\n\n    // when change occurs(like sort property), run the function in useEffect\n    useEffect(() => {\n        // using async since we need the data before load the page\n        const fetchMovies = async() => {\n            // fetch() - built in function\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?&language=en-US&page=${page}`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer '+ API_TOKEN \n                }\n                \n            });\n            let rawMovieData = await res.json();\n\n            // splice making a copy of array that returned \n            rawMovieData = rawMovieData.results.splice(0, 12);\n    \n            // save the data returned into a variable \n            \n\n            if(page === 1){\n                setMovieData1(rawMovieData);\n            }else if(page === 2) {\n                setMovieData2(rawMovieData);\n            } else if (page === 3 ){\n                setMovieData3(rawMovieData);\n            }else if(page === 4) {\n                setMovieData4(rawMovieData);\n            }else if(page === 5) {\n                setMovieData5(rawMovieData);\n            }\n\n        }\n\n        fetchMovies();\n    }, [sort, page]);\n\n\n    // Banner\n    const fetchPopularMovies = async() => {\n        const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`, {\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + API_TOKEN,\n            },\n        });\n        let popularMovieData = await res.json();\n        popularMovieData = popularMovieData.results.splice(0, 10);\n        setMovieDataBanner(popularMovieData);\n        setMovieBannerLength(popularMovieData.length);\n\n    };\n    useEffect( async () => {\n        await fetchPopularMovies();\n    }, []);\n\n    function handleLoadMore(){\n        setPage(page + 1);\n    }\n\n    return (\n        <div>\n            <Banner movieObj = {movieDataBanner} movieBannerLength = {movieBannerLength} />\n            <NavSort />\n            {movieData1 !== null && <Movies movieData={movieData1} />}\n            {(movieData1 !== null && movieData2 === null) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div>}\n            \n            {movieData2 !== null && <Movies movieData={movieData2} />}\n            {(movieData2 !== null && movieData3 === null) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div> }\n        \n            {movieData3 !== null && <Movies movieData={movieData3} />}\n            {(movieData3 !== null && movieData4 === null ) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div>}\n           \n            {movieData4 !== null && <Movies movieData={movieData4} />}\n            {(movieData4 !== null && movieData5===null) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div>}\n         \n            {movieData5 !== null && <Movies movieData={movieData5} />}\n        </div>\n\n        \n    )\n}\n\nexport default PageHome;\n","/Users/claire/Documents/GitHub/movieapp/src/components/ScrollToTop.js",[],"/Users/claire/Documents/GitHub/movieapp/src/pages/PageFavorites.js",["149","150","151","152"],"import {BrowserRouter as Router, Route} from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { API_TOKEN } from '../globals/globals';\nimport Movies from '../components/Movies';\nimport PageHome from './PageHome';\n\nfunction PageFavs() {\n    \n    // create state for favMovies array\n    const savedMovies = JSON.parse(localStorage.getItem(\"favMovies\"))\n\n    return (\n        <section className=\"favorites\">\n            <h2>Favorite Movies</h2>\n            {/* <h2>{savedMovies === null ? \"No Favorite\": \"Here are your favorites\"}</h2> */}\n            {/* {savedMovies.length !== 0 ? <Movies movieData={savedMovies} /> :<Route path=\"/\" exact><PageHome sort='popular' /><p>You have no favorites. Please go back to the homepage to add some savedMovies</p></Route>} */}\n            {savedMovies.length !== 0 ? <Movies movieData={savedMovies} /> : <p className=\"no-favorites\">You have no favorites. Please go back to the <NavLink to=\"/sort/popular\">home page </NavLink>to add some movies.</p>}\n        </section>\n    )\n}\n\nexport default PageFavs;","/Users/claire/Documents/GitHub/movieapp/src/pages/PageSingleMovie.js",["153"],"import { useState, useEffect} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { API_TOKEN } from '../globals/globals';\nimport SingleMovie from '../components/SingleMovie';\n\n\nfunction PageSingleMovie() {\n\n    const { id } = useParams(); \n\n    const [movieData, setMovieData] = useState(null);\n\n    console.log(id)\n\n    // https://developers.themoviedb.org/3/movies/get-movie-details\n    // when change occurs, run the function in useEffect\n    useEffect(() => {\n        // using async since we need the data before load the page\n        const fetchMovies = async() => {\n            // fetch() - built in function\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?&language=en-US&page=1`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer '+ API_TOKEN \n                }\n            });\n            let rawMovieData = await res.json();\n\n            // save the data returned into a variable \n            setMovieData(rawMovieData);\n        }\n\n        fetchMovies();\n    }, []);\n\n    return (\n        <div>\n            {/* if movieData does have information, display SingleMovie */}\n            {movieData !== null && <SingleMovie movieObj = {movieData} />}\n        </div>\n    )\n}\n\nexport default PageSingleMovie;\n","/Users/claire/Documents/GitHub/movieapp/src/components/NavMain.js",[],"/Users/claire/Documents/GitHub/movieapp/src/components/NavSort.js",[],"/Users/claire/Documents/GitHub/movieapp/src/components/Movies.js",[],"/Users/claire/Documents/GitHub/movieapp/src/components/Banner.js",["154","155"],"import { useEffect, useState } from \"react\";\nimport noPoster from '../images/no-movie-poster.jpg';\n\n\nfunction Banner( { movieObj, movieBannerLength } ) {\n\n    const [bannerData, setBannerData] = useState(null);\n    \n    useEffect(() => {\n        setBannerData(movieObj);\n    }, [movieObj]);\n\n\n    let randomNum = Math.floor(Math.random() * movieBannerLength);\n\n    let movieDisplayed = movieObj && movieObj[randomNum];\n\n\n\n\n    return (\n        <div className=\"banner-container\">\n            <img src={`https://image.tmdb.org/t/p/original/${movieDisplayed && movieDisplayed.backdrop_path}`} alt=\"placeholder\" />\n            <div className=\"banner-info-container\">\n                <h2 class=\"banner-title\">{ movieDisplayed && movieDisplayed.title}</h2>\n                <p class=\"banner-overview\">{ movieDisplayed && movieDisplayed.overview}</p>\n\n                {/* path to the movie page (use movie id) */}\n                <a href={`/movie/${movieDisplayed && movieDisplayed.id}`} id=\"banner-watch-now-btn\">Watch Now</a>\n\n            </div>\n\n            \n        </div>\n    )\n}\n\nexport default Banner;\n\n","/Users/claire/Documents/GitHub/movieapp/src/components/SingleMovie.js",["156","157","158","159","160","161","162","163","164"],"import React, { useState, useEffect } from 'react';\nimport noPoster from '../images/no-movie-poster.jpg';\nimport addFavorite from '../images/add-favorite.png';\nimport removeFavorite from '../images/remove-favorite.png'\nimport thumbup from '../images/thumbup.svg';\nimport thumbdown from '../images/thumbdown.svg';\nimport mehIcon from '../images/meh.svg';\nimport playIcon from '../images/video.svg';\nimport { favMovies } from '../globals/globals';\n\n\nfunction SingleMovie({ movieObj }) {\n\n    const [fav, setFav] = useState(false)\n    // if movie not found in localstorage in favorites page then push movie into it\n    function addFav() {\n        let favourites = JSON.parse(localStorage.getItem(\"favMovies\"));\n        if (favourites.find(m => m.title == movieObj.title) != null) {\n            const index = favourites.findIndex((movie) => movie.id == movieObj.id);\n            if ( index > -1) {\n                console.log(\"found\")\n                favourites.splice(index, 1);\n                localStorage.setItem(\"favMovies\", JSON.stringify(favourites));\n            }\n        } else {\n            favourites.push(movieObj);\n            localStorage.setItem(\"favMovies\", JSON.stringify(favourites))\n        }\n\n        setFav(JSON.parse(localStorage.getItem(\"favMovies\")))\n        console.log(JSON.parse(localStorage.getItem(\"favMovies\")))\n        \n    }\n\n\n    \n\n    const heartIcon = () => {\n        let favs = JSON.parse(localStorage.getItem(\"favMovies\"));\n\n        // if (JSON.parse(localStorage.getItem(\"favMovies\")).includes(movieObj)) {\n        if (favs.find(m => m.title == movieObj.title) != null) {\n            // console.log(\"faved\")\n            return (\n                <div className=\"remove-favorite\" onClick={addFav}>\n                    <img src={removeFavorite} alt=\"Unfavorite icon\" />\n                </div>\n            )\n        } else {\n            // console.log(\"unfaved\");\n            return (\n                <div className=\"add-favorite\" onClick={addFav}>\n                    <img src={addFavorite} alt=\"Favorite icon\" />\n                </div>\n            )\n        }\n    }\n\n\n\n\n\n    return (\n        <div className=\"single-movie\" style={{backgroundImage: movieObj.backdrop_path && `url(https://image.tmdb.org/t/p/original/${movieObj.backdrop_path})`}}>\n            {/* <div className=\"single-movie-background-image\" ></div> */}\n\n            {/* reference page for the path */}\n            {/* https://developers.themoviedb.org/3/getting-started/images */}\n            <div className=\"single-movie-container\" >\n            \n                <div className=\"single-movie-content\" >\n                        {movieObj.poster_path === null? <img src={noPoster} alt=\"no poster image\" id=\"single-movie-poster\"/> : <img src={`https://image.tmdb.org/t/p/original${movieObj.poster_path}`} alt={movieObj.title} id='single-movie-poster' />}\n                    <div className=\"single-movie-info\">\n                        <h2 id=\"single-movie-title\">{movieObj.title}</h2>\n                        <div className=\"single-movie-info-header\">\n                            <p id=\"single-movie-release-date\">{movieObj.release_date}</p>\n                             <div>{heartIcon()}</div>\n        \n                            \n                        </div>\n                        \n                        <div className=\"single-movie-rating\">\n                            <img src={movieObj.vote_average>5.0? thumbup : thumbdown} alt=\"rate Icon\" id=\"single-movie-rate-icon\" />\n                            <span >{(movieObj.vote_average)*10}%</span>\n                        </div>\n                        <p id=\"single-movie-overview\">{movieObj.overview}</p>\n                        <div className=\"single-movie-watch-now-btn-container\">\n                            <a href={`/movie/${movieObj.id}`} id=\"single-movie-watch-now-btn\">Watch Now\n                        </a>\n\n                        </div>\n                    \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SingleMovie;\n","/Users/claire/Documents/GitHub/movieapp/src/globals/globals.js",[],"/Users/claire/Documents/GitHub/movieapp/src/components/MovieCard.js",["165","166","167","168","169","170"],"import { useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport noPoster from '../images/no-movie-poster.jpg';\nimport addFavorite from '../images/add-favorite.png';\nimport removeFavorite from '../images/remove-favorite.png';\nimport { NavLink } from 'react-router-dom';\nimport thumbup from '../images/thumbup.svg';\nimport thumbdown from '../images/thumbdown.svg';\n\nfunction MovieCard({ movieObj }) {\n\n    const [fav, setFav] = useState(false)\n    // if movie not found in localstorage in favorites page then push movie into it\n    function addFav() {\n        let favourites = JSON.parse(localStorage.getItem(\"favMovies\"));\n        if (favourites.find(m => m.title == movieObj.title) != null) {\n            const index = favourites.findIndex((movie) => movie.id == movieObj.id);\n            if ( index > -1) {\n                console.log(\"found\")\n                favourites.splice(index, 1);\n                localStorage.setItem(\"favMovies\", JSON.stringify(favourites));\n            }\n        } else {\n            favourites.push(movieObj);\n            localStorage.setItem(\"favMovies\", JSON.stringify(favourites))\n        }\n\n        setFav(JSON.parse(localStorage.getItem(\"favMovies\")))\n        console.log(JSON.parse(localStorage.getItem(\"favMovies\")))\n        \n    }\n\n\n    \n\n    const heartIcon = () => {\n        let favs = JSON.parse(localStorage.getItem(\"favMovies\"));\n\n        // if (JSON.parse(localStorage.getItem(\"favMovies\")).includes(movieObj)) {\n        if (favs.find(m => m.title == movieObj.title) != null) {\n            // console.log(\"faved\")\n            return (\n                <div className=\"remove-favorite\" onClick={addFav}>\n                    <img src={removeFavorite} alt=\"Unfavorite icon\" />\n                </div>\n            )\n        } else {\n            // console.log(\"unfaved\");\n            return (\n                <div className=\"add-favorite\" onClick={addFav}>\n                    <img src={addFavorite} alt=\"Favorite icon\" />\n                </div>\n            )\n        }\n    }\n\n\n\n    return (\n        <div className=\"movie-card\">\n            <div className=\"movie-poster\">\n                {/* If no poster, then render the no poster image */}\n                {/* If there is a movie poster, then output using movie id (url parameter) */}\n                {movieObj.poster_path === null ?\n                    <img src={noPoster} alt=\"No poster\" /> :\n                    <img src={`https://image.tmdb.org/t/p/original${movieObj.poster_path}`} alt={movieObj.title} />\n                }\n            </div>\n            <div className=\"movie-info\">\n                <h3>{movieObj.title}</h3>\n                <p>{movieObj.release_date}</p>\n                <div className=\"movie-rating\">\n                    <img src={movieObj.vote_average>5.0? thumbup : thumbdown} alt=\"rate Icon\" id=\"movie-rating-icon\" />\n                    <p>{(movieObj.vote_average)*10}%</p>\n                </div>\n                <p className=\"overview\">{movieObj.overview}</p>\n                <Link to={`/movie/${movieObj.id}`}>More Info</Link>\n                <div>{heartIcon()}</div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard;\n\n","/Users/claire/Documents/GitHub/movie-app/src/index.js",[],["171","172"],"/Users/claire/Documents/GitHub/movie-app/src/routers/AppRouter.js",[],"/Users/claire/Documents/GitHub/movie-app/src/components/Header.js",[],"/Users/claire/Documents/GitHub/movie-app/src/components/Footer.js",[],"/Users/claire/Documents/GitHub/movie-app/src/components/BackToTop.js",[],"/Users/claire/Documents/GitHub/movie-app/src/pages/PageHome.js",["173"],"import { useEffect, useState } from 'react';\nimport { API_KEY, API_TOKEN } from '../globals/globals';\nimport NavSort from '../components/NavSort';\nimport Movies from '../components/Movies';\nimport Banner from '../components/Banner';\n\n\n\nfunction PageHome({ sort }) {\n\n    const [movieData1, setMovieData1] = useState(null);\n    const [movieData2, setMovieData2] = useState(null);\n    const [movieData3, setMovieData3] = useState(null);\n    const [movieData4, setMovieData4] = useState(null);\n    const [movieData5, setMovieData5] = useState(null);\n\n    const [page, setPage] = useState(1)\n\n    // variable for Banner\n    const [movieDataBanner, setMovieDataBanner] = useState(null);\n    const [movieBannerLength, setMovieBannerLength] = useState(null);\n\n\n    // when change occurs(like sort property), run the function in useEffect\n    useEffect(() => {\n        // using async since we need the data before load the page\n        const fetchMovies = async() => {\n            // fetch() - built in function\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?&language=en-US&page=${page}`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer '+ API_TOKEN \n                }\n                \n            });\n            let rawMovieData = await res.json();\n\n            // splice making a copy of array that returned \n            rawMovieData = rawMovieData.results.splice(0, 12);\n    \n            // save the data returned into a variable \n            \n\n            if(page === 1){\n                setMovieData1(rawMovieData);\n            }else if(page === 2) {\n                setMovieData2(rawMovieData);\n            } else if (page === 3 ){\n                setMovieData3(rawMovieData);\n            }else if(page === 4) {\n                setMovieData4(rawMovieData);\n            }else if(page === 5) {\n                setMovieData5(rawMovieData);\n            }\n\n        }\n\n        fetchMovies();\n    }, [sort, page]);\n\n\n\n    // Banner\n    const fetchPopularMovies = async() => {\n        const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`, {\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + API_TOKEN,\n            },\n        });\n        let popularMovieData = await res.json();\n        popularMovieData = popularMovieData.results.splice(0, 10);\n        setMovieDataBanner(popularMovieData);\n        setMovieBannerLength(popularMovieData.length);\n\n    };\n    useEffect( async () => {\n        await fetchPopularMovies();\n    }, []);\n\n    function handleLoadMore(){\n        setPage(page + 1);\n    }\n\n    return (\n        <div>\n            <Banner movieObj = {movieDataBanner} movieBannerLength = {movieBannerLength} />\n            <NavSort />\n            {movieData1 !== null && <Movies movieData={movieData1} />}\n            {(movieData1 !== null && movieData2 === null) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div>}\n            \n            {movieData2 !== null && <Movies movieData={movieData2} />}\n            {(movieData2 !== null && movieData3 === null) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div> }\n        \n            {movieData3 !== null && <Movies movieData={movieData3} />}\n            {(movieData3 !== null && movieData4 === null ) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div>}\n           \n            {movieData4 !== null && <Movies movieData={movieData4} />}\n            {(movieData4 !== null && movieData5===null) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div>}\n         \n            {movieData5 !== null && <Movies movieData={movieData5} />}\n        </div>\n\n        \n    )\n}\n\nexport default PageHome;\n","/Users/claire/Documents/GitHub/movie-app/src/components/ScrollToTop.js",[],"/Users/claire/Documents/GitHub/movie-app/src/pages/PageAbout.js",[],"/Users/claire/Documents/GitHub/movie-app/src/pages/PageSingleMovie.js",["174"],"/Users/claire/Documents/GitHub/movie-app/src/pages/PageFavorites.js",["175","176","177","178"],"/Users/claire/Documents/GitHub/movie-app/src/components/NavMain.js",[],"/Users/claire/Documents/GitHub/movie-app/src/components/Movies.js",[],"/Users/claire/Documents/GitHub/movie-app/src/components/NavSort.js",[],"/Users/claire/Documents/GitHub/movie-app/src/components/Banner.js",["179","180"],"/Users/claire/Documents/GitHub/movie-app/src/components/SingleMovie.js",["181","182","183","184","185","186","187","188","189"],"/Users/claire/Documents/GitHub/movie-app/src/globals/globals.js",[],"/Users/claire/Documents/GitHub/movie-app/src/components/MovieCard.js",["190","191","192","193","194","195"],"import { useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport noPoster from '../images/no-movie-poster.jpg';\nimport addFavorite from '../images/add-favorite.png';\nimport removeFavorite from '../images/remove-favorite.png';\nimport { NavLink } from 'react-router-dom';\nimport thumbup from '../images/thumbup.svg';\nimport thumbdown from '../images/thumbdown.svg';\n\nfunction MovieCard({ movieObj }) {\n\n    const [fav, setFav] = useState(false);\n    // if movie not found in localstorage in favorites page then push movie into it\n    function addFav() {\n\n\n        // CLAIRE TRYING\n        // using JSON.parse so that can access to and use the values from the favMovies\n        let fave = JSON.parse(localStorage.getItem(\"favMovies\"));\n        if(fave.find(m => m.title == movieObj.title) != null ){\n            // const findMovie = (movie) => movie.id == movieObj.id ;\n            const index = fave.findIndex((movie) => movie.id == movieObj.id);\n            if(index > -1){\n                fave.splice(index, 1);\n                // storage.setItem(keyName, keyValue); ==> both has to be in strings\n                localStorage.setItem(\"favMovies\", JSON.stringify(fave))\n                console.log(\"FOUND\");\n                console.log(index);\n            }\n\n        } else {\n            console.log(\"NOT FOUND\");\n            fave.push(movieObj);\n            localStorage.setItem(\"favMovies\", JSON.stringify(fave));\n        }\n\n        setFav(JSON.parse(localStorage.getItem(\"favMovies\")));\n        \n    }\n\n\n    \n\n    const heartIcon = () => {\n        let favs = JSON.parse(localStorage.getItem(\"favMovies\"));\n        // console.log(typeof(favs));\n        if(favs.find(m => m.title == movieObj.title) != null ){\n            // const findMovie = (movie) => movie.id == movieObj.id ;\n            // const index = favs.findIndex(findMovie);\n            // if(index > -1){\n                return (\n                    <div className=\"remove-favorite\" onClick={addFav}>\n                        <img src={removeFavorite} alt=\"Unfavorite icon\" />\n                    </div>\n                )\n            // }\n\n        } else {\n            console.log(\"unfaved\");\n                return (\n                    <div className=\"add-favorite\" onClick={addFav}>\n                        <img src={addFavorite} alt=\"Favorite icon\" />\n                    </div>\n                )\n        }\n\n\n\n\n\n\n\n        // let favs = JSON.parse(localStorage.getItem(\"favMovies\"));\n        // console.log(favs);\n\n        // if(favs.includes(movieObj)){\n            \n        //     if ( (favs.find(m => m.title == movieObj.title)) != null) {\n        //         console.log(\"faved\")\n        //         return (\n        //             <div className=\"remove-favorite\" onClick={addFav}>\n        //                 <img src={removeFavorite} alt=\"Unfavorite icon\" />\n        //             </div>\n        //         )\n        //     } else {\n        //         console.log(\"unfaved\");\n        //         return (\n        //             <div className=\"add-favorite\" onClick={addFav}>\n        //                 <img src={addFavorite} alt=\"Favorite icon\" />\n        //             </div>\n        //         )\n        //     }\n\n        // } else {\n        //     // console.log(\"unfaved\");\n        //     return (\n        //         <div className=\"add-favorite\" onClick={addFav}>\n        //             <img src={addFavorite} alt=\"Favorite icon\" />\n        //         </div>\n        //     )\n        // }\n\n        // if (JSON.parse(localStorage.getItem(\"favMovies\")).includes(movieObj)) {\n        \n    }\n\n\n\n    return (\n        <div className=\"movie-card\">\n            <div className=\"movie-poster\">\n                {/* If no poster, then render the no poster image */}\n                {/* If there is a movie poster, then output using movie id (url parameter) */}\n                {movieObj.poster_path === null ?\n                    <img src={noPoster} alt=\"No poster\" /> :\n                    <img src={`https://image.tmdb.org/t/p/original${movieObj.poster_path}`} alt={movieObj.title} />\n                }\n            </div>\n            <div className=\"movie-info\">\n                <h3>{movieObj.title}</h3>\n                <p>{movieObj.release_date}</p>\n                <div className=\"movie-rating\">\n                    <img src={movieObj.vote_average > 5.0 ? thumbup : thumbdown} alt=\"rate Icon\" id=\"movie-rating-icon\" />\n                    <p>{(movieObj.vote_average) * 10}%</p>\n                </div>\n                <p className=\"overview\">{movieObj.overview}</p>\n                <Link to={`/movie/${movieObj.id}`}>More Info</Link>\n                <div>{ heartIcon() }</div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard;\n\n",{"ruleId":"196","severity":1,"message":"197","line":77,"column":16,"nodeType":"198","endLine":79,"endColumn":6},{"ruleId":"199","severity":1,"message":"200","line":1,"column":26,"nodeType":"201","messageId":"202","endLine":1,"endColumn":32},{"ruleId":"199","severity":1,"message":"203","line":1,"column":34,"nodeType":"201","messageId":"202","endLine":1,"endColumn":39},{"ruleId":"199","severity":1,"message":"204","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":19},{"ruleId":"199","severity":1,"message":"205","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":16},{"ruleId":"196","severity":1,"message":"206","line":35,"column":8,"nodeType":"207","endLine":35,"endColumn":10,"suggestions":"208"},{"ruleId":"199","severity":1,"message":"209","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"210","line":7,"column":12,"nodeType":"201","messageId":"202","endLine":7,"endColumn":22},{"ruleId":"199","severity":1,"message":"211","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"212","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":15},{"ruleId":"199","severity":1,"message":"213","line":8,"column":8,"nodeType":"201","messageId":"202","endLine":8,"endColumn":16},{"ruleId":"199","severity":1,"message":"214","line":9,"column":10,"nodeType":"201","messageId":"202","endLine":9,"endColumn":19},{"ruleId":"199","severity":1,"message":"215","line":14,"column":12,"nodeType":"201","messageId":"202","endLine":14,"endColumn":15},{"ruleId":"216","severity":1,"message":"217","line":18,"column":42,"nodeType":"218","messageId":"219","endLine":18,"endColumn":44},{"ruleId":"216","severity":1,"message":"217","line":19,"column":68,"nodeType":"218","messageId":"219","endLine":19,"endColumn":70},{"ruleId":"216","severity":1,"message":"217","line":42,"column":36,"nodeType":"218","messageId":"219","endLine":42,"endColumn":38},{"ruleId":"220","severity":1,"message":"221","line":72,"column":57,"nodeType":"222","endLine":72,"endColumn":125},{"ruleId":"199","severity":1,"message":"211","line":1,"column":20,"nodeType":"201","messageId":"202","endLine":1,"endColumn":29},{"ruleId":"199","severity":1,"message":"223","line":6,"column":10,"nodeType":"201","messageId":"202","endLine":6,"endColumn":17},{"ruleId":"199","severity":1,"message":"215","line":12,"column":12,"nodeType":"201","messageId":"202","endLine":12,"endColumn":15},{"ruleId":"216","severity":1,"message":"217","line":16,"column":42,"nodeType":"218","messageId":"219","endLine":16,"endColumn":44},{"ruleId":"216","severity":1,"message":"217","line":17,"column":68,"nodeType":"218","messageId":"219","endLine":17,"endColumn":70},{"ruleId":"216","severity":1,"message":"217","line":40,"column":36,"nodeType":"218","messageId":"219","endLine":40,"endColumn":38},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"196","severity":1,"message":"197","line":79,"column":16,"nodeType":"198","endLine":81,"endColumn":6},{"ruleId":"196","severity":1,"message":"206","line":35,"column":8,"nodeType":"207","endLine":35,"endColumn":10,"suggestions":"228"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":26,"nodeType":"201","messageId":"202","endLine":1,"endColumn":32},{"ruleId":"199","severity":1,"message":"203","line":1,"column":34,"nodeType":"201","messageId":"202","endLine":1,"endColumn":39},{"ruleId":"199","severity":1,"message":"204","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":19},{"ruleId":"199","severity":1,"message":"205","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":16},{"ruleId":"199","severity":1,"message":"209","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"210","line":7,"column":12,"nodeType":"201","messageId":"202","endLine":7,"endColumn":22},{"ruleId":"199","severity":1,"message":"211","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"212","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":15},{"ruleId":"199","severity":1,"message":"213","line":8,"column":8,"nodeType":"201","messageId":"202","endLine":8,"endColumn":16},{"ruleId":"199","severity":1,"message":"214","line":9,"column":10,"nodeType":"201","messageId":"202","endLine":9,"endColumn":19},{"ruleId":"199","severity":1,"message":"215","line":14,"column":12,"nodeType":"201","messageId":"202","endLine":14,"endColumn":15},{"ruleId":"216","severity":1,"message":"217","line":18,"column":42,"nodeType":"218","messageId":"219","endLine":18,"endColumn":44},{"ruleId":"216","severity":1,"message":"217","line":19,"column":68,"nodeType":"218","messageId":"219","endLine":19,"endColumn":70},{"ruleId":"216","severity":1,"message":"217","line":42,"column":36,"nodeType":"218","messageId":"219","endLine":42,"endColumn":38},{"ruleId":"220","severity":1,"message":"221","line":72,"column":57,"nodeType":"222","endLine":72,"endColumn":125},{"ruleId":"199","severity":1,"message":"211","line":1,"column":20,"nodeType":"201","messageId":"202","endLine":1,"endColumn":29},{"ruleId":"199","severity":1,"message":"223","line":6,"column":10,"nodeType":"201","messageId":"202","endLine":6,"endColumn":17},{"ruleId":"199","severity":1,"message":"215","line":12,"column":12,"nodeType":"201","messageId":"202","endLine":12,"endColumn":15},{"ruleId":"216","severity":1,"message":"217","line":20,"column":35,"nodeType":"218","messageId":"219","endLine":20,"endColumn":37},{"ruleId":"216","severity":1,"message":"217","line":22,"column":62,"nodeType":"218","messageId":"219","endLine":22,"endColumn":64},{"ruleId":"216","severity":1,"message":"217","line":47,"column":35,"nodeType":"218","messageId":"219","endLine":47,"endColumn":37},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'API_TOKEN' is defined but never used.","'PageHome' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'noPoster' is defined but never used.","'bannerData' is assigned a value but never used.","'useEffect' is defined but never used.","'mehIcon' is defined but never used.","'playIcon' is defined but never used.","'favMovies' is defined but never used.","'fav' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'NavLink' is defined but never used.","no-native-reassign",["230"],"no-negated-in-lhs",["231"],["232"],{"desc":"233","fix":"234"},"no-global-assign","no-unsafe-negation",{"desc":"233","fix":"235"},"Update the dependencies array to be: [id]",{"range":"236","text":"237"},{"range":"238","text":"237"},[1148,1150],"[id]",[1148,1150]]