{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport movieCard from '../components/MovieCard';\nimport { API_KEY, API_TOKEN } from '../globals/globals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageSearch({\n  sort\n}) {\n  _s();\n\n  const [q, setQ] = useState(\"\"); // search by movie title only\n\n  const [searchParam, setSearchParam] = useState([\"title\"]);\n  useEffect(() => {\n    // using async since we need the data before load the page\n    const fetchMovies = async () => {\n      // fetch() - built in function\n      const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?&language=en-US&page=1`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + API_TOKEN\n        }\n      });\n      let rawMovieData = await res.json(); // splice making a copy of array that returned \n    };\n\n    fetchMovies();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"PageSearch\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PageSearch, \"7Vr6nxdCrmrxzrm90tk4MPBQGuc=\");\n\n_c = PageSearch;\nexport default PageSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSearch\");","map":{"version":3,"sources":["/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js"],"names":["React","useEffect","useState","movieCard","API_KEY","API_TOKEN","PageSearch","sort","q","setQ","searchParam","setSearchParam","fetchMovies","res","fetch","headers","rawMovieData","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,oBAAnC;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA8B;AAAA;;AAE1B,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYP,QAAQ,CAAC,EAAD,CAA1B,CAF0B,CAI1B;;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAC,OAAD,CAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACX;AACA,UAAMW,WAAW,GAAG,YAAW;AAC3B;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCP,IAAK,yBAA5C,EAAsE;AACzFQ,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB,kBAFX;AAGL,2BAAiB,YAAWV;AAHvB;AADgF,OAAtE,CAAvB;AAQA,UAAIW,YAAY,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAzB,CAV2B,CAY3B;AAIH,KAhBD;;AAiBAL,IAAAA,WAAW;AAEd,GArBQ,CAAT;AAuBF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAnCQN,U;;KAAAA,U;AAqCT,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport movieCard from '../components/MovieCard';\nimport { API_KEY, API_TOKEN } from '../globals/globals';\n\nfunction PageSearch({ sort }) {\n\n    const [q, setQ] = useState(\"\");\n\n    // search by movie title only\n    const [searchParam, setSearchParam] = useState([\"title\"]);\n\n    useEffect(()=> {\n        // using async since we need the data before load the page\n        const fetchMovies = async() => {\n            // fetch() - built in function\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?&language=en-US&page=1`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer '+ API_TOKEN \n                }\n                \n            });\n            let rawMovieData = await res.json();\n\n            // splice making a copy of array that returned \n\n\n\n        }\n        fetchMovies();\n\n    })\n\n  return (\n    <div>\n        PageSearch\n    </div>\n  )\n}\n\nexport default PageSearch"]},"metadata":{},"sourceType":"module"}