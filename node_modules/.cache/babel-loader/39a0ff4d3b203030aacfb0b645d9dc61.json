{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageSearch({\n  sort\n}) {\n  _s();\n\n  useEffect(() => {\n    // using async since we need the data before load the page\n    const fetchMovies = async () => {\n      // fetch() - built in function\n      const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?&language=en-US&page=${page}`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + API_TOKEN\n        }\n      });\n      let rawMovieData = await res.json(); // splice making a copy of array that returned \n\n      rawMovieData = rawMovieData.results.splice(0, 12); // save the data returned into a variable \n    };\n\n    fetchMovies();\n  }, [sort, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"PageSearch\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PageSearch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PageSearch;\nexport default PageSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSearch\");","map":{"version":3,"sources":["/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js"],"names":["React","useState","useEffect","API_TOKEN","API_KEY","PageSearch","sort","fetchMovies","res","fetch","page","headers","rawMovieData","json","results","splice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,oBAAnC;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA8B;AAAA;;AAE1BJ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMK,WAAW,GAAG,YAAW;AAC3B;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCH,IAAK,yBAAwBI,IAAK,EAAzE,EAA4E;AAC/FC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB,kBAFX;AAGL,2BAAiB,YAAWR;AAHvB;AADsF,OAA5E,CAAvB;AAQA,UAAIS,YAAY,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAzB,CAV2B,CAY3B;;AACAD,MAAAA,YAAY,GAAGA,YAAY,CAACE,OAAb,CAAqBC,MAArB,CAA4B,CAA5B,EAA+B,EAA/B,CAAf,CAb2B,CAe3B;AAIH,KAnBD;;AAqBAR,IAAAA,WAAW;AACd,GAxBQ,EAwBN,CAACD,IAAD,EAAOI,IAAP,CAxBM,CAAT;AA2BF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAhCQL,U;;KAAAA,U;AAkCT,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\n\nfunction PageSearch({ sort }) {\n\n    useEffect(() => {\n        // using async since we need the data before load the page\n        const fetchMovies = async() => {\n            // fetch() - built in function\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?&language=en-US&page=${page}`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer '+ API_TOKEN \n                }\n                \n            });\n            let rawMovieData = await res.json();\n\n            // splice making a copy of array that returned \n            rawMovieData = rawMovieData.results.splice(0, 12);\n    \n            // save the data returned into a variable \n            \n\n\n        }\n\n        fetchMovies();\n    }, [sort, page]);\n\n\n  return (\n    <div>PageSearch</div>\n  )\n}\n\nexport default PageSearch"]},"metadata":{},"sourceType":"module"}