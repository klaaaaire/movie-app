{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\nimport Movies from '../components/Movies';\nimport MovieCard from '../components/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageSearch() {\n  _s();\n\n  const [query, setQuery] = useState(null);\n  const [searchedTerm, setSearchedTerm] = useState(null);\n  const [searching, setSearching] = useState(false);\n  const [moviesResults, setMoviesResults] = useState(null);\n  const [message, setMessage] = useState('');\n\n  const searchMovies = async e => {\n    e.preventDefault(); // find the input value and grab it \n\n    setQuery(e.target[0].value);\n    console.log(query);\n    console.log(typeof query);\n    setSearching(true); // if no value entered in the input box, \n\n    if (query == '') {\n      setMoviesResults(null);\n      setSearching(false);\n    } else {\n      const searchTerm = e.target[0].value; // put it in the api calling\n\n      const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`); // save it into a useState so can display\n\n      setMoviesResults(res.data.results);\n      console.log(res.data);\n      console.log(moviesResults);\n    } // empty the useState variable at the end or when new terms searched\n    // what happens when nothing is entered in the input box? --> gives an error so we should run the code above when there is a value typed into the box\n\n  };\n\n  return (\n    /*#__PURE__*/\n    // if there is results, show the list of movies\n    // if there isnt any result, show the message \"Movie Title\" cannot be found.\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"search-page-title\",\n        children: \"Movie Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"search-form\",\n          onSubmit: searchMovies,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search-input-box\",\n            type: \"text\",\n            name: \"query\",\n            placeholder: \"Search movie titles here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-btn\",\n            children: \"Search Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), moviesResults == null || '' ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"No results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Movies, {\n        movieData: moviesResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(PageSearch, \"pNQxZEGyarfHAwBUpQrGcdfT/XQ=\");\n\n_c = PageSearch;\nexport default PageSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSearch\");","map":{"version":3,"sources":["/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js"],"names":["React","axios","useState","useEffect","API_TOKEN","API_KEY","Movies","MovieCard","PageSearch","query","setQuery","searchedTerm","setSearchedTerm","searching","setSearching","moviesResults","setMoviesResults","message","setMessage","searchMovies","e","preventDefault","target","value","console","log","searchTerm","res","get","data","results"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,oBAAnC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAGlB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMiB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF,GAD8B,CAG9B;;AACAX,IAAAA,QAAQ,CAACU,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAAb,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOhB,KAAnB;AACAK,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAP8B,CAS9B;;AACA,QAAGL,KAAK,IAAI,EAAZ,EAAe;AACXO,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHD,MAGO;AACH,YAAMY,UAAU,GAAGN,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAA/B,CADG,CAGH;;AACA,YAAMI,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAW,qDAAoDvB,OAAQ,UAASqB,UAAW,EAA3F,CAAlB,CAJG,CAMH;;AACAV,MAAAA,gBAAgB,CAACW,GAAG,CAACE,IAAJ,CAASC,OAAV,CAAhB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACE,IAAhB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;AAEH,KAxB6B,CA4B9B;AAGA;;AAEH,GAjCD;;AAsCA;AAAA;AAEI;AACA;AACA;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,UAAA,QAAQ,EAAEI,YAAxC;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,IAAI,EAAC,MAAzC;AAAgD,YAAA,IAAI,EAAC,OAArD;AAA6D,YAAA,WAAW,EAAC;AAAzE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQMJ,aAAa,IAAI,IAAjB,IAAyB,EAAzB,gBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA9B,gBAA0D,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,cARhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAqBH;;GApEQP,U;;KAAAA,U;AAsET,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\nimport Movies from '../components/Movies';\nimport MovieCard from '../components/MovieCard';\n\nfunction PageSearch() {\n\n\n    const [query, setQuery] = useState(null);\n    const [searchedTerm, setSearchedTerm] = useState(null);\n    const [searching, setSearching] = useState(false);\n    const [moviesResults, setMoviesResults] = useState(null);\n    const [message, setMessage] = useState('');\n\n    const searchMovies = async (e) => {\n        e.preventDefault();\n\n        // find the input value and grab it \n        setQuery(e.target[0].value);\n        console.log(query);\n        console.log(typeof query);\n        setSearching(true);\n\n        // if no value entered in the input box, \n        if(query == ''){\n            setMoviesResults(null);\n            setSearching(false);\n        } else {\n            const searchTerm = e.target[0].value;\n\n            // put it in the api calling\n            const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`);\n    \n            // save it into a useState so can display\n            setMoviesResults(res.data.results);\n            console.log(res.data);\n            console.log(moviesResults);\n\n        }\n\n    \n\n        // empty the useState variable at the end or when new terms searched\n\n\n        // what happens when nothing is entered in the input box? --> gives an error so we should run the code above when there is a value typed into the box\n\n    }\n\n   \n\n\n    return (\n\n        // if there is results, show the list of movies\n        // if there isnt any result, show the message \"Movie Title\" cannot be found.\n        <div>\n            <h1 className=\"search-page-title\">Movie Search</h1>\n            <div className=\"search-form-container\">\n                <form className=\"search-form\" onSubmit={searchMovies}>\n                    <input className=\"search-input-box\" type=\"text\" name=\"query\" placeholder=\"Search movie titles here\" />\n                    <button className=\"search-btn\">Search Now</button>\n                </form>\n            </div>\n            { moviesResults == null || '' ? <span>No results</span>  :  <Movies movieData={moviesResults}/>\n}\n\n\n    \n\n        </div>\n \n    )\n}\n\nexport default PageSearch"]},"metadata":{},"sourceType":"module"}