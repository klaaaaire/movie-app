{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\nimport SearchMovies from '../components/SearchMovies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageSearch() {\n  _s();\n\n  const [searching, setSearching] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [query, setQuery] = useState('');\n  const [moviesResults, setMoviesResults] = useState([]);\n\n  const searchMovies = async e => {\n    e.preventDefault();\n    setSearching(true);\n    const searchTerm = e.target[0].value;\n    const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`);\n    setMoviesResults(res.data);\n    console.log(res.data);\n  };\n\n  return (\n    /*#__PURE__*/\n    // if there is results, show the list of movies\n    // if there isnt any result, show the message \"Movie Title\" cannot be found.\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: searchMovies,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"query\",\n          placeholder: \"Search title here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), moviesResults ? /*#__PURE__*/_jsxDEV(SearchMovies, {\n        movieData: moviesResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 31\n      }, this) : \"No results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(PageSearch, \"uLU3QFXNFG/kKIJMfSZvRqHoYf0=\");\n\n_c = PageSearch;\nexport default PageSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSearch\");","map":{"version":3,"sources":["/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js"],"names":["React","axios","useState","useEffect","API_TOKEN","API_KEY","SearchMovies","PageSearch","searching","setSearching","message","setMessage","query","setQuery","moviesResults","setMoviesResults","searchMovies","e","preventDefault","searchTerm","target","value","res","get","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,oBAAnC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAGlB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMc,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMU,UAAU,GAAGF,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYC,KAA/B;AACA,UAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAW,qDAAoDlB,OAAQ,UAASc,UAAW,EAA3F,CAAlB;AACAJ,IAAAA,gBAAgB,CAACO,GAAG,CAACE,IAAL,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB;AAGH,GATD;;AAcA;AAAA;AAEI;AACA;AACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAER,YAAhB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,WAAW,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMMF,aAAa,gBAAG,QAAC,YAAD;AAAc,QAAA,SAAS,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiD,YANpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAmBH;;GAzCQP,U;;KAAAA,U;AA2CT,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\nimport SearchMovies from '../components/SearchMovies';\n\nfunction PageSearch() {\n\n\n    const [searching, setSearching] = useState(false);\n    const [message, setMessage] = useState(null);\n    const [query, setQuery] = useState('');\n    const [moviesResults, setMoviesResults] = useState([]);\n\n    const searchMovies = async (e) => {\n        e.preventDefault();\n        setSearching(true);\n        const searchTerm = e.target[0].value;\n        const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`);\n        setMoviesResults(res.data);\n        console.log(res.data);\n        \n\n    }\n\n   \n\n\n    return (\n\n        // if there is results, show the list of movies\n        // if there isnt any result, show the message \"Movie Title\" cannot be found.\n        <div>\n            <h1>Movie Search</h1>\n            <form onSubmit={searchMovies}>\n                <input type=\"text\" name=\"query\" placeholder=\"Search title here\" />\n                <button>Search</button>\n            </form>\n            { moviesResults ? <SearchMovies movieData={moviesResults} />  : \"No results\"\n            }\n\n\n    \n\n        </div>\n \n    )\n}\n\nexport default PageSearch"]},"metadata":{},"sourceType":"module"}