{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/GitHub/movie-app/src/pages/PageHome.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { API_KEY, API_TOKEN } from '../globals/globals';\nimport NavSort from '../components/NavSort';\nimport Movies from '../components/Movies';\nimport Banner from '../components/Banner';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageHome({\n  sort\n}) {\n  _s();\n\n  // const [movieData1, setMovieData1] = useState(null);\n  // const [movieData2, setMovieData2] = useState(null);\n  // const [movieData3, setMovieData3] = useState(null);\n  // const [movieData4, setMovieData4] = useState(null);\n  // const [movieData5, setMovieData5] = useState(null);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true); // variable for Banner\n\n  const [movieItems, setMovieItems] = useState([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [movieDataBanner, setMovieDataBanner] = useState(null);\n  const [movieBannerLength, setMovieBannerLength] = useState(null); // when change occurs(like sort property), run the function in useEffect\n\n  useEffect(() => {\n    // using async since we need the data before load the page\n    const fetchMovies = async () => {\n      setIsFetching(true); // fetch() - built in function\n\n      const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?&language=en-US&page=${page}`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + API_TOKEN\n        }\n      });\n      let rawMovieData = await res.json(); // splice making a copy of array that returned \n\n      rawMovieData = rawMovieData.results.splice(0, 12); // save the data returned into a variable \n\n      if (page === 1) {\n        setMovieItems(rawMovieData); //     setMovieData1(rawMovieData);\n        // }else if(page === 2) {\n        //     setMovieData2(rawMovieData);\n        // } else if (page === 3 ){\n        //     setMovieData3(rawMovieData);\n        // }else if(page === 4) {\n        //     setMovieData4(rawMovieData);\n        // }else if(page === 5) {\n        //     setMovieData5(rawMovieData);\n      }\n    };\n\n    fetchMovies();\n  }, [sort, page]); // Banner\n\n  const fetchPopularMovies = async () => {\n    const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`, {\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + API_TOKEN\n      }\n    });\n    let popularMovieData = await res.json();\n    popularMovieData = popularMovieData.results.splice(0, 10);\n    setMovieDataBanner(popularMovieData);\n    setMovieBannerLength(popularMovieData.length);\n  };\n\n  useEffect(async () => {\n    await fetchPopularMovies();\n  }, []);\n\n  function handleLoadMore() {\n    setPage(page + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      movieObj: movieDataBanner,\n      movieBannerLength: movieBannerLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavSort, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), movieData1 !== null && /*#__PURE__*/_jsxDEV(Movies, {\n      movieData: movieData1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }, this), movieData1 !== null && movieData2 === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-more-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        className: \"load-more-btn\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 103\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 62\n    }, this), movieData2 !== null && /*#__PURE__*/_jsxDEV(Movies, {\n      movieData: movieData2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }, this), movieData2 !== null && movieData3 === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-more-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        className: \"load-more-btn\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 103\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 62\n    }, this), movieData3 !== null && /*#__PURE__*/_jsxDEV(Movies, {\n      movieData: movieData3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }, this), movieData3 !== null && movieData4 === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-more-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        className: \"load-more-btn\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 104\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 63\n    }, this), movieData4 !== null && /*#__PURE__*/_jsxDEV(Movies, {\n      movieData: movieData4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }, this), movieData4 !== null && movieData5 === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-more-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        className: \"load-more-btn\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 101\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 60\n    }, this), movieData5 !== null && /*#__PURE__*/_jsxDEV(Movies, {\n      movieData: movieData5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PageHome, \"G2AEOAwyTq7JdkBHnswGxKPxzDQ=\");\n\n_c = PageHome;\nexport default PageHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageHome\");","map":{"version":3,"sources":["/Users/claire/Documents/GitHub/movie-app/src/pages/PageHome.js"],"names":["useEffect","useState","API_KEY","API_TOKEN","NavSort","Movies","Banner","axios","PageHome","sort","page","setPage","hasMore","setHasMore","movieItems","setMovieItems","isFetching","setIsFetching","movieDataBanner","setMovieDataBanner","movieBannerLength","setMovieBannerLength","fetchMovies","res","fetch","headers","rawMovieData","json","results","splice","fetchPopularMovies","Authorization","popularMovieData","length","handleLoadMore","movieData1","movieData2","movieData3","movieData4","movieData5"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { API_KEY, API_TOKEN } from '../globals/globals';\nimport NavSort from '../components/NavSort';\nimport Movies from '../components/Movies';\nimport Banner from '../components/Banner';\nimport axios from 'axios';\n\nfunction PageHome({ sort }) {\n\n    // const [movieData1, setMovieData1] = useState(null);\n    // const [movieData2, setMovieData2] = useState(null);\n    // const [movieData3, setMovieData3] = useState(null);\n    // const [movieData4, setMovieData4] = useState(null);\n    // const [movieData5, setMovieData5] = useState(null);\n\n    const [page, setPage] = useState(1)\n    const [hasMore, setHasMore] = useState(true);\n\n    // variable for Banner\n    const [movieItems, setMovieItems] = useState([]);\n    const [isFetching, setIsFetching] = useState(false);\n\n    const [movieDataBanner, setMovieDataBanner] = useState(null);\n    const [movieBannerLength, setMovieBannerLength] = useState(null);\n\n\n    // when change occurs(like sort property), run the function in useEffect\n    useEffect(() => {\n        // using async since we need the data before load the page\n        const fetchMovies = async() => {\n            setIsFetching(true);\n            // fetch() - built in function\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${sort}?&language=en-US&page=${page}`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer '+ API_TOKEN \n                }\n                \n            });\n            let rawMovieData = await res.json();\n\n            // splice making a copy of array that returned \n            rawMovieData = rawMovieData.results.splice(0, 12);\n    \n            // save the data returned into a variable \n            \n\n            if(page === 1){\n                setMovieItems(rawMovieData);\n            //     setMovieData1(rawMovieData);\n            // }else if(page === 2) {\n            //     setMovieData2(rawMovieData);\n            // } else if (page === 3 ){\n            //     setMovieData3(rawMovieData);\n            // }else if(page === 4) {\n            //     setMovieData4(rawMovieData);\n            // }else if(page === 5) {\n            //     setMovieData5(rawMovieData);\n            }\n\n        }\n\n        fetchMovies();\n    }, [sort, page]);\n\n\n    // Banner\n    const fetchPopularMovies = async() => {\n        const res = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`, {\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \" + API_TOKEN,\n            },\n        });\n        let popularMovieData = await res.json();\n        popularMovieData = popularMovieData.results.splice(0, 10);\n        setMovieDataBanner(popularMovieData);\n        setMovieBannerLength(popularMovieData.length);\n\n    };\n    useEffect( async () => {\n        await fetchPopularMovies();\n    }, []);\n\n    function handleLoadMore(){\n        setPage(page + 1);\n    }\n\n    return (\n        <div>\n            <Banner movieObj = {movieDataBanner} movieBannerLength = {movieBannerLength} />\n            <NavSort />\n            {movieData1 !== null && <Movies movieData={movieData1} />}\n            {(movieData1 !== null && movieData2 === null) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div>}\n            \n            {movieData2 !== null && <Movies movieData={movieData2} />}\n            {(movieData2 !== null && movieData3 === null) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div> }\n        \n            {movieData3 !== null && <Movies movieData={movieData3} />}\n            {(movieData3 !== null && movieData4 === null ) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div>}\n           \n            {movieData4 !== null && <Movies movieData={movieData4} />}\n            {(movieData4 !== null && movieData5===null) && <div className='load-more-btn-container'><button onClick={handleLoadMore} className='load-more-btn'>Load More</button></div>}\n         \n            {movieData5 !== null && <Movies movieData={movieData5} />}\n        </div>\n\n        \n    )\n}\n\nexport default PageHome;\n"]},"metadata":{},"sourceType":"module"}