{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageSearch() {\n  _s();\n\n  const [searching, setSearching] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const searchMovies = async e => {\n    e.preventDefault();\n    setSearching(true);\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setMessage(null);\n      setMovies(data.Search);\n      setSearching(false);\n    } catch (err) {\n      setMessage('An unexpected error occured.');\n      setSearching(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: searchMovies,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search here...\",\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searching && !message ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 43\n      }, this) : message ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 82\n      }, this) : movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PageSearch, \"WqJrmEdJXvZ8EY7aw8zrJaQlEaw=\");\n\n_c = PageSearch;\nexport default PageSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSearch\");","map":{"version":3,"sources":["/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js"],"names":["React","useState","useEffect","API_TOKEN","API_KEY","PageSearch","searching","setSearching","message","setMessage","query","setQuery","movies","setMovies","searchMovies","e","preventDefault","url","response","fetch","data","json","Search","err","target","value","map","movie","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,oBAAnC;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAGlB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMa,YAAY,GAAG,MAAMC,CAAN,IAAY;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMU,GAAG,GAAI,qDAAoDb,OAAQ,4CAAzE;;AACA,QAAI;AACA,YAAMc,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,MAAAA,SAAS,CAACO,IAAI,CAACE,MAAN,CAAT;AACAf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAND,CAME,OAAMgB,GAAN,EAAU;AACRd,MAAAA,UAAU,CAAC,8BAAD,CAAV;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AAEJ,GAfD;;AAqBA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEO,YAAhB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,gBAA/B;AAAgD,UAAA,QAAQ,EAAGC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACS,MAAF,CAASC,KAAV;AAAzE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,gBACKnB,SAAS,IAAI,CAACE,OAAd,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,GAAqDA,OAAO,gBAAI;AAAA,wBAAOA,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,GAA6BI,MAAM,CAACc,GAAP,CAAWC,KAAK,iBACtG;AAAA,+BACI;AAAA,6CAAU;AAAA,sBAAOA,KAAK,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADsF;AAD9F;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAlDQvB,U;;KAAAA,U;AAoDT,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\n\nfunction PageSearch() {\n\n\n    const [searching, setSearching] = useState(false);\n    const [message, setMessage] = useState(null);\n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n\n    const searchMovies = async(e) => {\n        e.preventDefault();\n        setSearching(true);\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            setMessage(null);\n            setMovies(data.Search);\n            setSearching(false);\n        } catch(err){\n            setMessage('An unexpected error occured.');\n            setSearching(false);\n        }\n\n    }\n\n\n   \n\n\n    return (\n        <div>\n            <div>\n                <form onSubmit={searchMovies}>\n                    <input type=\"text\" placeholder=\"Search here...\" onChange={(e) => setQuery(e.target.value)}/>\n                    <button type=\"submit\">Search</button>\n                </form>\n            </div>\n\n            <div>\n                {searching && !message ? (<span> loading... </span>): message ? (<div> {message} </div>): movies.map(movie => (\n                    <div>\n                        <p>Title: <span>{movie.title}</span></p>\n                    </div>\n\n                ))}\n            </div>\n        </div>\n\n \n    )\n}\n\nexport default PageSearch"]},"metadata":{},"sourceType":"module"}