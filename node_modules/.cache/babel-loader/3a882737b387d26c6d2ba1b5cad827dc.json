{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\nimport Movies from '../components/Movies';\nimport MovieCard from '../components/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageSearch() {\n  _s();\n\n  const [searching, setSearching] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [query, setQuery] = useState('');\n  const [moviesResults, setMoviesResults] = useState([]);\n\n  const searchMovies = async e => {\n    e.preventDefault();\n    setSearching(true);\n    const searchTerm = e.target[0].value;\n    const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`);\n    setMoviesResults.push(res.data);\n    console.log(res.data);\n    console.log(moviesResults);\n  };\n\n  return (\n    /*#__PURE__*/\n    // if there is results, show the list of movies\n    // if there isnt any result, show the message \"Movie Title\" cannot be found.\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movie Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: searchMovies,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"query\",\n          placeholder: \"Search title here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), moviesResults !== [] ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"No Results Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 38\n      }, this) : moviesResults.map((oneMovie, i) => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movieObj: oneMovie\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 107\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(PageSearch, \"uLU3QFXNFG/kKIJMfSZvRqHoYf0=\");\n\n_c = PageSearch;\nexport default PageSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSearch\");","map":{"version":3,"sources":["/Users/claire/Documents/GitHub/movie-app/src/pages/PageSearch.js"],"names":["React","axios","useState","useEffect","API_TOKEN","API_KEY","Movies","MovieCard","PageSearch","searching","setSearching","message","setMessage","query","setQuery","moviesResults","setMoviesResults","searchMovies","e","preventDefault","searchTerm","target","value","res","get","push","data","console","log","map","oneMovie","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,oBAAnC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAGlB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMe,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMU,UAAU,GAAGF,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYC,KAA/B;AACA,UAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAW,qDAAoDnB,OAAQ,UAASe,UAAW,EAA3F,CAAlB;AACAJ,IAAAA,gBAAgB,CAACS,IAAjB,CAAsBF,GAAG,CAACG,IAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACG,IAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AAGH,GAVD;;AAeA;AAAA;AAEI;AACA;AACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAEE,YAAhB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,WAAW,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMMF,aAAa,KAAK,EAAlB,gBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,GAAyDA,aAAa,CAACc,GAAd,CAAkB,CAACC,QAAD,EAAWC,CAAX,kBAAiB,QAAC,SAAD;AAAmB,QAAA,QAAQ,EAAED;AAA7B,SAAgBC,CAAhB;AAAA;AAAA;AAAA;AAAA,cAAnC,CAN/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAmBH;;GA1CQvB,U;;KAAAA,U;AA4CT,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { API_TOKEN, API_KEY } from '../globals/globals';\nimport Movies from '../components/Movies';\nimport MovieCard from '../components/MovieCard';\n\nfunction PageSearch() {\n\n\n    const [searching, setSearching] = useState(false);\n    const [message, setMessage] = useState(null);\n    const [query, setQuery] = useState('');\n    const [moviesResults, setMoviesResults] = useState([]);\n\n    const searchMovies = async (e) => {\n        e.preventDefault();\n        setSearching(true);\n        const searchTerm = e.target[0].value;\n        const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`);\n        setMoviesResults.push(res.data);\n        console.log(res.data);\n        console.log(moviesResults);\n        \n\n    }\n\n   \n\n\n    return (\n\n        // if there is results, show the list of movies\n        // if there isnt any result, show the message \"Movie Title\" cannot be found.\n        <div>\n            <h1>Movie Search</h1>\n            <form onSubmit={searchMovies}>\n                <input type=\"text\" name=\"query\" placeholder=\"Search title here\" />\n                <button>Search</button>\n            </form>\n            { moviesResults !== [] ? <span>No Results Found</span>  :  moviesResults.map((oneMovie, i) => <MovieCard key={i} movieObj={oneMovie}/>)\n}\n\n\n    \n\n        </div>\n \n    )\n}\n\nexport default PageSearch"]},"metadata":{},"sourceType":"module"}