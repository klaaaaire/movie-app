{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/GitHub/movie-app/src/components/MovieCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport noPoster from '../images/no-movie-poster.jpg';\nimport addFavorite from '../images/add-favorite.png';\nimport removeFavorite from '../images/remove-favorite.png';\nimport { NavLink } from 'react-router-dom';\nimport thumbup from \"../images/thumbup.svg\";\nimport thumbdown from \"../images/thumbdown.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieCard({\n  movieObj\n}) {\n  _s();\n\n  const [fav, setFav] = useState(null); // if movie not found in localstorage in favorites page then push movie into it\n\n  function addFav() {\n    // CLAIRE TRYING\n    // using JSON.parse so that can access to and use the values from the favMovies\n    let fave = JSON.parse(localStorage.getItem(\"favMovies\"));\n\n    if (fave.find(m => m.id == movieObj.id) != null) {\n      const findMovie = movie => movie.id == movieObj.id;\n\n      const index = fave.findIndex(findMovie);\n\n      if (index > -1) {\n        fave.splice(index, 1); // storage.setItem(keyName, keyValue); ==> both has to be in strings\n\n        localStorage.setItem(\"favMovies\", JSON.stringify(fave));\n        console.log(\"FOUND\");\n        console.log(index);\n      }\n    } else {\n      console.log(\"NOT FOUND\");\n      fave.push(movieObj);\n      localStorage.setItem(\"favMovies\", JSON.stringify(fave));\n    }\n\n    setFav(JSON.parse(localStorage.getItem(\"favMovies\")));\n  }\n\n  const heartIcon = () => {\n    let favs = JSON.parse(localStorage.getItem(\"favMovies\"));\n    console.log(favs);\n\n    if (favs.includes(movieObj)) {\n      if (favs.find(m => m.title == movieObj.title) != null) {\n        console.log(\"faved\");\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remove-favorite\",\n          onClick: addFav,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: removeFavorite,\n            alt: \"Unfavorite icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);\n      } else {\n        console.log(\"unfaved\");\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-favorite\",\n          onClick: addFav,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: addFavorite,\n            alt: \"Favorite icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this);\n      }\n    } else {\n      // console.log(\"unfaved\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-favorite\",\n        onClick: addFav,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addFavorite,\n          alt: \"Favorite icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this);\n    } // if (JSON.parse(localStorage.getItem(\"favMovies\")).includes(movieObj)) {\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-poster\",\n      children: movieObj.poster_path === null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: noPoster,\n        alt: \"No poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/original${movieObj.poster_path}`,\n        alt: movieObj.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movieObj.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movieObj.release_date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-rating\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movieObj.vote_average > 5.0 ? thumbup : thumbdown,\n          alt: \"rate Icon\",\n          id: \"movie-rating-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [movieObj.vote_average * 10, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"overview\",\n        children: movieObj.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/movie/${movieObj.id}/credits`,\n        children: \"More Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: heartIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieCard, \"N4ftY2itlsNQo7CD9eMjSTEamyw=\");\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["/Users/claire/Documents/GitHub/movie-app/src/components/MovieCard.js"],"names":["useState","useEffect","Link","noPoster","addFavorite","removeFavorite","NavLink","MovieCard","movieObj","fav","setFav","addFav","fave","JSON","parse","localStorage","getItem","find","m","id","findMovie","movie","index","findIndex","splice","setItem","stringify","console","log","push","heartIcon","favs","includes","title","poster_path","release_date","vote_average","thumbup","thumbdown","overview"],"mappings":"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","sourcesContent":["import { useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport noPoster from '../images/no-movie-poster.jpg';\nimport addFavorite from '../images/add-favorite.png';\nimport removeFavorite from '../images/remove-favorite.png';\nimport { NavLink } from 'react-router-dom';\nimport thumbup from '../images/thumbup.svg';\nimport thumbdown from '../images/thumbdown.svg';\n\nfunction MovieCard({ movieObj }) {\n\n    const [fav, setFav] = useState(null);\n    // if movie not found in localstorage in favorites page then push movie into it\n    function addFav() {\n\n        // CLAIRE TRYING\n        // using JSON.parse so that can access to and use the values from the favMovies\n        let fave = JSON.parse(localStorage.getItem(\"favMovies\"));\n        if(fave.find(m => m.id == movieObj.id) != null ){\n            const findMovie = (movie) => movie.id == movieObj.id ;\n            const index = fave.findIndex(findMovie);\n            if(index > -1){\n                fave.splice(index, 1);\n                // storage.setItem(keyName, keyValue); ==> both has to be in strings\n                localStorage.setItem(\"favMovies\", JSON.stringify(fave))\n                console.log(\"FOUND\");\n                console.log(index);\n            }\n\n        } else {\n            console.log(\"NOT FOUND\");\n            fave.push(movieObj);\n            localStorage.setItem(\"favMovies\", JSON.stringify(fave));\n        }\n\n        setFav(JSON.parse(localStorage.getItem(\"favMovies\")));\n        \n    }\n\n\n    \n\n    const heartIcon = () => {\n        let favs = JSON.parse(localStorage.getItem(\"favMovies\"));\n        console.log(favs);\n\n\n        if(favs.includes(movieObj)){\n            \n            if (favs.find(m => m.title == movieObj.title) != null) {\n                console.log(\"faved\")\n                return (\n                    <div className=\"remove-favorite\" onClick={addFav}>\n                        <img src={removeFavorite} alt=\"Unfavorite icon\" />\n                    </div>\n                )\n            } else {\n                console.log(\"unfaved\");\n                return (\n                    <div className=\"add-favorite\" onClick={addFav}>\n                        <img src={addFavorite} alt=\"Favorite icon\" />\n                    </div>\n                )\n            }\n\n        } else {\n            // console.log(\"unfaved\");\n            return (\n                <div className=\"add-favorite\" onClick={addFav}>\n                    <img src={addFavorite} alt=\"Favorite icon\" />\n                </div>\n            )\n        }\n\n        // if (JSON.parse(localStorage.getItem(\"favMovies\")).includes(movieObj)) {\n        \n    }\n\n\n\n    return (\n        <div className=\"movie-card\">\n            <div className=\"movie-poster\">\n                {/* If no poster, then render the no poster image */}\n                {/* If there is a movie poster, then output using movie id (url parameter) */}\n                {movieObj.poster_path === null ?\n                    <img src={noPoster} alt=\"No poster\" /> :\n                    <img src={`https://image.tmdb.org/t/p/original${movieObj.poster_path}`} alt={movieObj.title} />\n                }\n            </div>\n            <div className=\"movie-info\">\n                <h3>{movieObj.title}</h3>\n                <p>{movieObj.release_date}</p>\n                <div className=\"movie-rating\">\n                    <img src={movieObj.vote_average > 5.0 ? thumbup : thumbdown} alt=\"rate Icon\" id=\"movie-rating-icon\" />\n                    <p>{(movieObj.vote_average) * 10}%</p>\n                </div>\n                <p className=\"overview\">{movieObj.overview}</p>\n                <Link to={`/movie/${movieObj.id}/credits`}>More Info</Link>\n                <div>{heartIcon()}</div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard;\n\n"]},"metadata":{},"sourceType":"module"}